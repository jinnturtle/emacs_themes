(deftheme edar
  "Created 2024-05-06.")

(setq color-foreground   "#90a0b0")
(setq color-foregroundD1 "#707090")
(setq color-background   "#000a1a")
(setq color-backgroundL1 "#101a2a")
(setq color-backgroundL2 "#202a3a")
(setq color-blue         "#0080d0")
(setq color-green        "#00a000")
(setq color-cyan         "#00d0e0")
(setq color-teal         "#00b090")
(setq color-yellow       "#b0b060")
(setq color-amber        "#c08000")
(setq color-purple       "#b060ff")
(setq color-black        "#000000")
(setq color-tbd          "#ff00ff")

(custom-theme-set-faces
 'edar
 `(cursor ((t (:background ,color-teal))))
 '(fixed-pitch ((t (:family "Monospace"))))
 '(variable-pitch ((((type w32)) (:foundry "outline" :family "Arial")) (t (:family "Sans Serif"))))
 `(escape-glyph ((((background dark)) (:foreground ,color-cyan)) (((type pc)) (:foreground "magenta")) (t (:foreground "brown"))))
 `(homoglyph ((((background dark)) (:foreground ,color-cyan)) (((type pc)) (:foreground "magenta")) (t (:foreground "brown"))))
 `(minibuffer-prompt ((t (:foreground ,color-cyan))))
 `(highlight ((t (:background ,color-backgroundL1))))
 `(region ((t (:extend t :background ,color-teal :foreground ,color-background))))
 `(shadow ((t (:foreground ,color-foregroundD1))))
 `(secondary-selection ((t (:extend t :background ,color-foregroundD1))))
 `(trailing-whitespace ((t (:foreground ,color-yellow :background ,color-teal))))
 '(font-lock-bracket-face ((t (:inherit (font-lock-punctuation-face)))))
 `(font-lock-builtin-face ((t (:foreground ,color-green))))
 `(font-lock-comment-delimiter-face ((t (:foreground ,color-foregroundD1))))
 `(font-lock-comment-face ((t (:foreground ,color-foregroundD1))))
 `(font-lock-constant-face ((t (:foreground ,color-teal))))
 '(font-lock-delimiter-face ((t (:inherit (font-lock-punctuation-face)))))
 `(font-lock-doc-face ((t (:foreground ,color-black))))
 '(font-lock-doc-markup-face ((t (:inherit (font-lock-constant-face)))))
 '(font-lock-escape-face ((t (:inherit (font-lock-regexp-grouping-backslash)))))
 '(font-lock-function-call-face ((t (:inherit (font-lock-function-name-face)))))
 `(font-lock-function-name-face ((t (:foreground ,color-green))))
 `(font-lock-keyword-face ((t (:foreground ,color-purple :weight bold))))
 `(font-lock-negation-char-face ((t (:foreground ,color-yellow :weight bold))))
 '(font-lock-number-face ((t nil)))
 '(font-lock-misc-punctuation-face ((t (:inherit (font-lock-punctuation-face)))))
 '(font-lock-operator-face ((t nil)))
 `(font-lock-preprocessor-face ((t (:foreground ,color-green))))
 '(font-lock-property-name-face ((t (:inherit (font-lock-variable-name-face)))))
 '(font-lock-property-use-face ((t (:inherit (font-lock-property-name-face)))))
 '(font-lock-punctuation-face ((t nil)))
 `(font-lock-regexp-grouping-backslash ((t (:foreground ,color-purple))))
 `(font-lock-regexp-grouping-construct ((t (:foreground ,color-blue))))
 `(font-lock-string-face ((t (:foreground ,color-amber))))
 `(font-lock-type-face ((t (:foreground ,color-blue))))
 `(font-lock-variable-name-face ((t (:foreground ,color-green))))
 '(font-lock-variable-use-face ((t (:inherit (font-lock-variable-name-face)))))
 `(font-lock-warning-face ((t (:foreground ,color-green))))
 '(button ((t (:inherit (link)))))
 `(link ((t (:underline (:color foreground-color :style line :position nil) :foreground ,color-blue))))
 `(link-visited ((t (:underline (:color foreground-color :style line :position nil) :foreground ,color-purple))))
 `(fringe ((t (:background ,color-backgroundL1))))
 `(header-line ((t (:foreground ,color-blue :inherit (mode-line)))))
 `(tooltip ((t (:background ,color-backgroundL1 :inherit (default)))))
 `(mode-line ((t (:box nil :foreground ,color-foreground :background ,color-backgroundL1))))
 `(mode-line-buffer-id ((t (:foreground ,color-yellow))))
 `(mode-line-emphasis ((t (:slant italic :foreground ,color-green))))
 `(mode-line-highlight ((t (:weight bold :box nil :foreground ,color-blue))))
 `(mode-line-active ((t (:box nil :foreground ,color-teal :background ,color-backgroundL2))))
 `(mode-line-inactive ((t (:box nil :foreground ,color-foregroundD1 :background ,color-backgroundL1))))
 `(isearch ((t (:inverse-video t :foreground ,color-cyan :background ,color-backgroundL1))))
 `(isearch-fail ((t (:inverse-video t :background ,color-backgroundL1 :inherit (font-lock-warning-face)))))
 `(lazy-highlight ((t (:inverse-video t :foreground ,color-blue :background ,color-black))))
 `(match ((t (:inverse-video t :foreground ,color-green :background ,color-backgroundL1))))
 '(next-error ((t (:inherit (region)))))
 '(query-replace ((t (:inherit (isearch)))))
 `(line-number-current-line ((t (:inherit (fringe) :foreground ,color-cyan))))
 '(tab-bar ((t (:inherit (mode-line)))))
 `(tab-bar-tab-inactive ((t (:inherit (tab-bar-tab) :foreground ,color-foregroundD1 :weight regular))))
 `(tab-bar-tab ((t (:inherit (tab-bar) :foreground ,color-cyan :weight bold))))
 `(show-paren-match ((t (:inherit (font-lock-string-face) :foreground ,color-background :background ,color-yellow))))
 '(inform7-string-face ((t (:weight regular :inherit (font-lock-string-face)))))
 `(inform7-substitution-face ((t (:inherit (inform7-string-face) :foreground ,color-yellow))))
 `(default ((t (:inherit nil :extend nil :stipple nil :background ,color-background :foreground ,color-foreground :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight regular :height 107 :width normal :foundry "UKWN" :family "mononoki"))))
)

(provide-theme 'edar)
